{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/documents-app/src/components/Documents.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/components/Documents.tsx\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Documents = ({\n  documents\n}) => {\n  _s();\n  const [filter, setFilter] = useState('');\n\n  // Filter documents by filename\n  const filteredDocuments = documents.filter(doc => doc.name.toLowerCase().includes(filter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Filter by filename\",\n      onChange: e => setFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Documents, \"cllJ8tv7lWu5CRRMgsiTyzyV2No=\");\n_c = Documents;\nconst sortDocuments = (docs, sortBy) => {\n  // Implement sorting logic based on sortBy parameter (name, size, date)\n};\nconst DocumentItem = ({\n  document\n}) => {\n  _s2();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setIsOpen(!isOpen),\n      children: document.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), isOpen && document.files && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: '20px'\n      },\n      children: document.files.map((file, index) => /*#__PURE__*/_jsxDEV(DocumentItem, {\n        document: file\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n_s2(DocumentItem, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c2 = DocumentItem;\nexport default Documents;\n\n// Extend the Documents.tsx with the following\nvar _c, _c2;\n$RefreshReg$(_c, \"Documents\");\n$RefreshReg$(_c2, \"DocumentItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Documents","documents","_s","filter","setFilter","filteredDocuments","doc","name","toLowerCase","includes","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","sortDocuments","docs","sortBy","DocumentItem","document","_s2","isOpen","setIsOpen","onClick","files","style","paddingLeft","map","file","index","_c2","$RefreshReg$"],"sources":["/Users/ryan/documents-app/src/components/Documents.tsx"],"sourcesContent":["// src/components/Documents.tsx\n\nimport React, { useState } from 'react';\nimport { Document } from '../types/documents';\n\ninterface Props {\n  documents: Document[];\n}\n\nconst Documents: React.FC<Props> = ({ documents }) => {\n  const [filter, setFilter] = useState('');\n\n  // Filter documents by filename\n  const filteredDocuments = documents.filter(doc => doc.name.toLowerCase().includes(filter.toLowerCase()));\n\n  return (\n    <div>\n      <input \n        type=\"text\" \n        placeholder=\"Filter by filename\" \n        onChange={(e) => setFilter(e.target.value)} \n      />\n      {/* Documents and folders listing goes here */}\n    </div>\n  );\n};\n\nconst sortDocuments = (docs: Document[], sortBy: string) => {\n    // Implement sorting logic based on sortBy parameter (name, size, date)\n  };\n  \n  const DocumentItem: React.FC<{ document: Document }> = ({ document }) => {\n    const [isOpen, setIsOpen] = useState(false);\n  \n    return (\n      <div>\n        <div onClick={() => setIsOpen(!isOpen)}>{document.name}</div>\n        {isOpen && document.files && (\n          <div style={{ paddingLeft: '20px' }}>\n            {document.files.map((file, index) => (\n              <DocumentItem key={index} document={file} />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\nexport default Documents;\n\n\n// Extend the Documents.tsx with the following\n\n  "],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,SAA0B,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMQ,iBAAiB,GAAGJ,SAAS,CAACE,MAAM,CAACG,GAAG,IAAIA,GAAG,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,MAAM,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC;EAExG,oBACET,OAAA;IAAAW,QAAA,eACEX,OAAA;MACEY,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,QAAQ,EAAGC,CAAC,IAAKV,SAAS,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhBIF,SAA0B;AAAAqB,EAAA,GAA1BrB,SAA0B;AAkBhC,MAAMsB,aAAa,GAAGA,CAACC,IAAgB,EAAEC,MAAc,KAAK;EACxD;AAAA,CACD;AAED,MAAMC,YAA8C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACvE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAE3C,oBACEE,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAK+B,OAAO,EAAEA,CAAA,KAAMD,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAlB,QAAA,EAAEgB,QAAQ,CAACnB;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC5DQ,MAAM,IAAIF,QAAQ,CAACK,KAAK,iBACvBhC,OAAA;MAAKiC,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAO,CAAE;MAAAvB,QAAA,EACjCgB,QAAQ,CAACK,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9BrC,OAAA,CAAC0B,YAAY;QAAaC,QAAQ,EAAES;MAAK,GAAtBC,KAAK;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACO,GAAA,CAfIF,YAA8C;AAAAY,GAAA,GAA9CZ,YAA8C;AAgBtD,eAAezB,SAAS;;AAGxB;AAAA,IAAAqB,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}