{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/documents-app/src/components/Documents.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DocumentItem from './DocumentItem';\nimport Folder from './Folder';\nimport { FilterInput } from './StyledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Documents = ({\n  documents\n}) => {\n  _s();\n  const [filter, setFilter] = useState('');\n  const [sortCriterion, setSortCriterion] = useState('name');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const sortDocuments = docs => {\n    return [...docs].sort((a, b) => {\n      let comparison = 0;\n      if (sortCriterion === 'name') {\n        comparison = a.name.localeCompare(b.name);\n      } else if (sortCriterion === 'size') {\n        // Assuming all documents have a size, but you could apply similar logic as with dates\n        comparison = (a.size || 0) - (b.size || 0);\n      } else if (sortCriterion === 'added') {\n        // Provide a fallback date for missing 'added' dates, or sort those documents to the end\n        const dateA = new Date(a.added || '1970-01-01').getTime();\n        const dateB = new Date(b.added || '1970-01-01').getTime();\n        comparison = dateA - dateB;\n      }\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n  const filteredSortedDocuments = sortDocuments(documents.filter(doc => doc.name.toLowerCase().includes(filter.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterInput, {\n      type: \"text\",\n      placeholder: \"Filter by filename\",\n      onChange: e => setFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSortCriterion('name');\n          setSortDirection('asc');\n        },\n        children: \"Sort by Name \\u2191\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSortCriterion('name');\n          setSortDirection('desc');\n        },\n        children: \"Sort by Name \\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSortCriterion('size');\n          setSortDirection('asc');\n        },\n        children: \"Sort by Size \\u2191\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSortCriterion('size');\n          setSortDirection('desc');\n        },\n        children: \"Sort by Size \\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSortCriterion('added');\n          setSortDirection('asc');\n        },\n        children: \"Sort by Date \\u2191\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSortCriterion('added');\n          setSortDirection('desc');\n        },\n        children: \"Sort by Date \\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), filteredSortedDocuments.map((doc, index) => doc.type === 'folder' ? /*#__PURE__*/_jsxDEV(Folder, {\n      folder: doc\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(DocumentItem, {\n      document: doc\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Documents, \"iQpdrO1aTT48MTf0IhR4/i9zVS4=\");\n_c = Documents;\nexport default Documents;\nvar _c;\n$RefreshReg$(_c, \"Documents\");","map":{"version":3,"names":["React","useState","DocumentItem","Folder","FilterInput","jsxDEV","_jsxDEV","Documents","documents","_s","filter","setFilter","sortCriterion","setSortCriterion","sortDirection","setSortDirection","sortDocuments","docs","sort","a","b","comparison","name","localeCompare","size","dateA","Date","added","getTime","dateB","filteredSortedDocuments","doc","toLowerCase","includes","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","folder","document","_c","$RefreshReg$"],"sources":["/Users/ryan/documents-app/src/components/Documents.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Document } from '../types/documents';\nimport DocumentItem from './DocumentItem';\nimport Folder from './Folder';\nimport { FilterInput } from './StyledComponents';\n\ninterface DocumentsProps {\n  documents: Document[];\n}\n\nconst Documents: React.FC<DocumentsProps> = ({ documents }) => {\n  const [filter, setFilter] = useState('');\n  const [sortCriterion, setSortCriterion] = useState<'name' | 'size' | 'added'>('name');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const sortDocuments = (docs: Document[]): Document[] => {\n    return [...docs].sort((a, b) => {\n      let comparison = 0;\n      if (sortCriterion === 'name') {\n        comparison = a.name.localeCompare(b.name);\n      } else if (sortCriterion === 'size') {\n        // Assuming all documents have a size, but you could apply similar logic as with dates\n        comparison = (a.size || 0) - (b.size || 0);\n      } else if (sortCriterion === 'added') {\n        // Provide a fallback date for missing 'added' dates, or sort those documents to the end\n        const dateA = new Date(a.added || '1970-01-01').getTime();\n        const dateB = new Date(b.added || '1970-01-01').getTime();\n        comparison = dateA - dateB;\n      }\n  \n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n  \n\n  const filteredSortedDocuments = sortDocuments(documents.filter(doc =>\n    doc.name.toLowerCase().includes(filter.toLowerCase())\n  ));\n\n  return (\n    <div>\n      <FilterInput\n        type=\"text\"\n        placeholder=\"Filter by filename\"\n        onChange={(e) => setFilter(e.target.value)}\n      />\n      <div>\n        <button onClick={() => { setSortCriterion('name'); setSortDirection('asc'); }}>Sort by Name ↑</button>\n        <button onClick={() => { setSortCriterion('name'); setSortDirection('desc'); }}>Sort by Name ↓</button>\n        <button onClick={() => { setSortCriterion('size'); setSortDirection('asc'); }}>Sort by Size ↑</button>\n        <button onClick={() => { setSortCriterion('size'); setSortDirection('desc'); }}>Sort by Size ↓</button>\n        <button onClick={() => { setSortCriterion('added'); setSortDirection('asc'); }}>Sort by Date ↑</button>\n        <button onClick={() => { setSortCriterion('added'); setSortDirection('desc'); }}>Sort by Date ↓</button>\n      </div>\n      {filteredSortedDocuments.map((doc, index) =>\n        doc.type === 'folder' ? (\n          <Folder key={index} folder={doc} />\n        ) : (\n          <DocumentItem key={index} document={doc} />\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Documents;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}