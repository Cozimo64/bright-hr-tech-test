{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/documents-app/src/components/DocumentItem.tsx\";\nimport React from 'react';\nimport { DocumentItemStyle } from './StyledComponents';\nimport { formatFileSize } from '../utils/formatFileSize'; // Assuming you have this utility\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentItem = ({\n  document\n}) => {\n  // Simple date formatting. Consider using a library for more complex needs.\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DocumentItemStyle, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"document-name\",\n      children: document.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"document-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"document-date\",\n        children: formatDate(document.added)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), document.size && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"document-size\",\n        children: [formatFileSize(document.size), \" | \", document.type.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = DocumentItem;\nexport default DocumentItem;\nvar _c;\n$RefreshReg$(_c, \"DocumentItem\");","map":{"version":3,"names":["React","DocumentItemStyle","formatFileSize","jsxDEV","_jsxDEV","DocumentItem","document","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","added","size","type","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/ryan/documents-app/src/components/DocumentItem.tsx"],"sourcesContent":["import React from 'react';\nimport { Document } from '../types/documents';\nimport { DocumentItemStyle } from './StyledComponents';\nimport { formatFileSize } from '../utils/formatFileSize'; // Assuming you have this utility\n\ninterface DocumentItemProps {\n  document: Document;\n}\n\nconst DocumentItem: React.FC<DocumentItemProps> = ({ document }) => {\n  // Simple date formatting. Consider using a library for more complex needs.\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", { year: 'numeric', month: 'long', day: 'numeric' });\n  };\n\n  return (\n    <DocumentItemStyle>\n      <div className=\"document-name\">{document.name}</div>\n      <div className=\"document-details\">\n        <span className=\"document-date\">{formatDate(document.added)}</span>\n        {document.size && (\n          <span className=\"document-size\">\n            {formatFileSize(document.size)} | {document.type.toUpperCase()}\n          </span>\n        )}\n      </div>\n    </DocumentItemStyle>\n  );\n};\n\nexport default DocumentItem;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,cAAc,QAAQ,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAM1D,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAClE;EACA,MAAMC,UAAU,GAAIC,UAAkB,IAAK;IACzC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAU,CAAC,CAAC;EAC7F,CAAC;EAED,oBACEV,OAAA,CAACH,iBAAiB;IAAAc,QAAA,gBAChBX,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAD,QAAA,EAAET,QAAQ,CAACW;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpDjB,OAAA;MAAKY,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/BX,OAAA;QAAMY,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAER,UAAU,CAACD,QAAQ,CAACgB,KAAK;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAClEf,QAAQ,CAACiB,IAAI,iBACZnB,OAAA;QAAMY,SAAS,EAAC,eAAe;QAAAD,QAAA,GAC5Bb,cAAc,CAACI,QAAQ,CAACiB,IAAI,CAAC,EAAC,KAAG,EAACjB,QAAQ,CAACkB,IAAI,CAACC,WAAW,CAAC,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAExB,CAAC;AAACK,EAAA,GApBIrB,YAAyC;AAsB/C,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}