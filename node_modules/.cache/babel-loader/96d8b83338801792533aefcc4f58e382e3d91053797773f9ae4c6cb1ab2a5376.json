{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/documents-app/src/components/Documents.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DocumentItem from './DocumentItem';\nimport Folder from './Folder';\nimport { FilterInput } from './StyledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Documents = ({\n  documents\n}) => {\n  _s();\n  const [filter, setFilter] = useState('');\n  const [sortCriterion, setSortCriterion] = useState('name');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const toggleSort = criterion => {\n    if (sortCriterion === criterion) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortCriterion(criterion);\n      setSortDirection('asc'); // Default to ascending when changing criterion\n    }\n  };\n  const sortDocuments = docs => {\n    return [...docs].sort((a, b) => {\n      let comparison = 0;\n      if (sortCriterion === 'name') {\n        comparison = a.name.localeCompare(b.name);\n      } else if (sortCriterion === 'size') {\n        // Assuming all documents have a size, but you could apply similar logic as with dates\n        comparison = (a.size || 0) - (b.size || 0);\n      } else if (sortCriterion === 'added') {\n        // Provide a fallback date for missing 'added' dates, or sort those documents to the end\n        const dateA = new Date(a.added || '1970-01-01').getTime();\n        const dateB = new Date(b.added || '1970-01-01').getTime();\n        comparison = dateA - dateB;\n      }\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n  const filteredSortedDocuments = sortDocuments(documents.filter(doc => doc.name.toLowerCase().includes(filter.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterInput, {\n      type: \"text\",\n      placeholder: \"Filter by filename\",\n      onChange: e => setFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleSort('name'),\n        children: [\"Sort by Name \", sortCriterion === 'name' ? sortDirection === 'asc' ? '↑' : '↓' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleSort('size'),\n        children: [\"Sort by Size \", sortCriterion === 'size' ? sortDirection === 'asc' ? '↑' : '↓' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleSort('added'),\n        children: [\"Sort by Date \", sortCriterion === 'added' ? sortDirection === 'asc' ? '↑' : '↓' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), filteredSortedDocuments.map((doc, index) => doc.type === 'folder' ? /*#__PURE__*/_jsxDEV(Folder, {\n      folder: doc\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(DocumentItem, {\n      document: doc\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Documents, \"iQpdrO1aTT48MTf0IhR4/i9zVS4=\");\n_c = Documents;\nexport default Documents;\nvar _c;\n$RefreshReg$(_c, \"Documents\");","map":{"version":3,"names":["React","useState","DocumentItem","Folder","FilterInput","jsxDEV","_jsxDEV","Documents","documents","_s","filter","setFilter","sortCriterion","setSortCriterion","sortDirection","setSortDirection","toggleSort","criterion","sortDocuments","docs","sort","a","b","comparison","name","localeCompare","size","dateA","Date","added","getTime","dateB","filteredSortedDocuments","doc","toLowerCase","includes","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","folder","document","_c","$RefreshReg$"],"sources":["/Users/ryan/documents-app/src/components/Documents.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Document } from '../types/documents';\nimport DocumentItem from './DocumentItem';\nimport Folder from './Folder';\nimport { FilterInput } from './StyledComponents';\n\ninterface DocumentsProps {\n  documents: Document[];\n}\n\nconst Documents: React.FC<DocumentsProps> = ({ documents }) => {\n  const [filter, setFilter] = useState('');\n  const [sortCriterion, setSortCriterion] = useState<'name' | 'size' | 'added'>('name');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const toggleSort = (criterion: 'name' | 'size' | 'added') => {\n    if (sortCriterion === criterion) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortCriterion(criterion);\n      setSortDirection('asc'); // Default to ascending when changing criterion\n    }\n  };\n\n  const sortDocuments = (docs: Document[]): Document[] => {\n    return [...docs].sort((a, b) => {\n      let comparison = 0;\n      if (sortCriterion === 'name') {\n        comparison = a.name.localeCompare(b.name);\n      } else if (sortCriterion === 'size') {\n        // Assuming all documents have a size, but you could apply similar logic as with dates\n        comparison = (a.size || 0) - (b.size || 0);\n      } else if (sortCriterion === 'added') {\n        // Provide a fallback date for missing 'added' dates, or sort those documents to the end\n        const dateA = new Date(a.added || '1970-01-01').getTime();\n        const dateB = new Date(b.added || '1970-01-01').getTime();\n        comparison = dateA - dateB;\n      }\n  \n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n  \n\n  const filteredSortedDocuments = sortDocuments(documents.filter(doc =>\n    doc.name.toLowerCase().includes(filter.toLowerCase())\n  ));\n\n  return (\n    <div>\n      <FilterInput\n        type=\"text\"\n        placeholder=\"Filter by filename\"\n        onChange={(e) => setFilter(e.target.value)}\n      />\n      <div>\n        <button onClick={() => toggleSort('name')}>\n          Sort by Name {sortCriterion === 'name' ? (sortDirection === 'asc' ? '↑' : '↓') : ''}\n        </button>\n        <button onClick={() => toggleSort('size')}>\n          Sort by Size {sortCriterion === 'size' ? (sortDirection === 'asc' ? '↑' : '↓') : ''}\n        </button>\n        <button onClick={() => toggleSort('added')}>\n          Sort by Date {sortCriterion === 'added' ? (sortDirection === 'asc' ? '↑' : '↓') : ''}\n        </button>\n      </div>\n      {filteredSortedDocuments.map((doc, index) =>\n        doc.type === 'folder' ? (\n          <Folder key={index} folder={doc} />\n        ) : (\n          <DocumentItem key={index} document={doc} />\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Documents;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}